{"version":3,"sources":["components/PageTitle.js","../node_modules/pdfjs-dist/build sync","pages/admin/PDF/all-pages.js","pages/admin/KeyAnswer.pdf","pages/admin/KeyAnswers.js"],"names":["PageTitle","props","title","items","breadCrumbItems","Fragment","className","to","map","item","index","active","key","label","path","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","AllPages","useState","numPages","setNumPages","pdf","file","options","workerSrc","onLoadSuccess","Array","from","el","pageNumber","pdfjs","GlobalWorkerOptions","version","applicationForm1Query","isKeyAnswerAvailable","a","applicationForm2Query","isKeyAnswersChallengeable","data","db","collection","doc","console","log","set","error","alert","message","GenerateKeyAnswer","Component","state","keyAnswers","file1","uid","componentDidMount","get","then","res","this","setState","catch","err","localStorage","getItem","upload","storage","ref","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","child","getDownloadURL","url","applicationForm1","applicationForm2","sendState1","event","sendState2","render","row","for","md","type","onChange","target","files","onClick","color","style","height","background","class","border","value","RenderKeyAnswer","samplePDF","KeyAnswerChallenge","scope","elem","paper","questionNo","expectedKey","reason","KeyAnswers","constructor","super","querySnapshot","forEach","notificationVar","push","toggle","tab","activeTab","bind","tabContents","icon","text","href","classnames","tabId","sm"],"mappings":"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","file":"static/js/20.063e23b4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\n/**\r\n * Renders the PageTitle\r\n */\r\nconst PageTitle = (props) => {\r\n    const title = props.title || \"\";\r\n    const items = props.breadCrumbItems || \"\";\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Breadcrumb className=\"float-right mt-1 font-size-14\">\r\n                <BreadcrumbItem>\r\n                    <Link to=\"/\">Shreyu</Link>\r\n                </BreadcrumbItem>\r\n                {items.map((item, index) => {\r\n                    return item.active ? (\r\n                        <BreadcrumbItem active key={index}>\r\n                            {item.label}\r\n                        </BreadcrumbItem>\r\n                    ) : (\r\n                            <BreadcrumbItem key={index}>\r\n                                <Link to={item.path}>{item.label}</Link>\r\n                            </BreadcrumbItem>\r\n                        );\r\n                })}\r\n            </Breadcrumb>\r\n\r\n            <h4 className=\"mb-1 mt-0\">{title}</h4>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PageTitle;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 177;","import React, { useState } from \"react\";\r\nimport { Document, Page } from \"react-pdf\";\r\n\r\nexport default function AllPages(props) {\r\n  const [numPages, setNumPages] = useState(null);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  const { pdf } = props;\r\n\r\n  return (\r\n    <Document\r\n      file={pdf}\r\n      options={{ workerSrc: \"./../pdf.worker.js\" }}\r\n      onLoadSuccess={onDocumentLoadSuccess}\r\n    >\r\n      {Array.from(new Array(numPages), (el, index) => (\r\n        <Page key={`page_${index + 1}`} pageNumber={index + 1} />\r\n      ))}\r\n    </Document>\r\n  );\r\n}","module.exports = __webpack_public_path__ + \"static/media/KeyAnswer.bf059c8c.pdf\";","import React, { Component } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardBody,\r\n    TabContent,\r\n    TabPane,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button,\r\n    UncontrolledDropdown,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    DropdownToggle,\r\n    CustomInput,\r\n} from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\n// import { Document, Page } from 'react-pdf';\r\n\r\nimport samplePDF from './KeyAnswer.pdf';\r\nimport SinglePagePDFViewer from './PDF/single-page';\r\nimport AllPagesPDFViewer from './PDF/all-pages';\r\n\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\nimport { db, auth, storage } from '../../helpers/firebase';\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nexport const applicationForm1Query = async (isKeyAnswerAvailable) => {};\r\n\r\nexport const applicationForm2Query = async (isKeyAnswersChallengeable) => {\r\n    try {\r\n        var data = db.collection('Global_Variables').doc('keyAnswersChallengeable');\r\n\r\n        console.log('success state changed');\r\n        data.set({\r\n            isKeyAnswersChallengeable: isKeyAnswersChallengeable,\r\n        });\r\n        // window.location.reload();\r\n    } catch (error) {\r\n        console.log('not success');\r\n        console.log(error);\r\n        alert(error.message);\r\n    }\r\n};\r\n\r\nclass GenerateKeyAnswer extends Component {\r\n    state = {\r\n        keyAnswers: '',\r\n        isKeyAnswerAvailable: '',\r\n        isKeyAnswersChallengeable: true,\r\n        file1: [],\r\n        uid: '',\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        db\r\n            .collection('Global_Variables')\r\n            .doc('keyAnswersAvailable')\r\n            .get()\r\n            .then((res) => {\r\n                this.setState({ isKeyAnswerAvailable: res.data().isKeyAnswerAvailable });\r\n                console.log('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00', this.state.isKeyAnswerAvailable);\r\n            }).catch = (err) => {\r\n            console.log('error');\r\n        };\r\n        this.state.uid = localStorage.getItem('uid');\r\n        console.log(this.state.uid);\r\n    };\r\n\r\n    upload = () => {\r\n        // alert(this.state.file, this.state.file.name);\r\n        const uploadTask = storage.ref(`${this.state.uid}/${this.state.file1.name}`).put(this.state.file1);\r\n        uploadTask.on(\r\n            'state_changed',\r\n            (snapshot) => {\r\n                // progress function ...\r\n                const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n                // this.setState({ progress });\r\n                console.log(progress);\r\n            },\r\n            (error) => {\r\n                // Error function ...\r\n                console.log(error);\r\n            },\r\n            () => {\r\n                // complete function ...\r\n                storage\r\n                    .ref(`${this.state.uid}`)\r\n                    .child(this.state.file1.name)\r\n                    .getDownloadURL()\r\n                    .then((url) => {\r\n                        console.log('url', url);\r\n                    });\r\n            }\r\n        );\r\n    };\r\n\r\n    applicationForm1 = () => {\r\n        try {\r\n            var data = db.collection('Global_Variables').doc('keyAnswersAvailable');\r\n\r\n            console.log('success state changed');\r\n            data.set({\r\n                isKeyAnswerAvailable: this.state.isKeyAnswerAvailable,\r\n            });\r\n        } catch (error) {\r\n            console.log('not success');\r\n            console.log(error);\r\n            alert(error.message);\r\n        }\r\n    };\r\n\r\n    applicationForm2 = () => {\r\n        applicationForm2Query(this.state.isKeyAnswersChallengeable);\r\n    };\r\n\r\n    sendState1 = (event) => {\r\n        console.log('sendData function', this.state);\r\n        // event.preventDefault();\r\n        this.applicationForm1();\r\n    };\r\n\r\n    sendState2 = (event) => {\r\n        console.log('sendData function', this.state);\r\n        // event.preventDefault();\r\n        this.applicationForm2();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h4 className=\"header-title\">Upload Key Answers</h4>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <FormGroup row>\r\n                                    <Label for=\"keyAnswers\" md={3}>\r\n                                        Upload Key Answers\r\n                                    </Label>\r\n                                    <Col md={9}>\r\n                                        <Input\r\n                                            type=\"file\"\r\n                                            // name=\"keyAnswers\"\r\n                                            // id=\"keyAnswers\"\r\n                                            // placeholder=\"enter register no.\"\r\n                                            // value={this.state.keyAnswers}\r\n                                            onChange={(e) => {\r\n                                                this.setState({ file1: e.target.files[0] });\r\n                                                console.log(this.state.file1);\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n\r\n                                <div className=\"text-right\">\r\n                                    <Button className=\"pull-right\" onClick={this.upload} color=\"success\">\r\n                                        Upload\r\n                                    </Button>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <hr style={{ height: '1px', color: 'black', background: 'black' }} />\r\n\r\n                <div class=\"row mt-5 mx-2\">\r\n                    <table className=\"table table-bordered\" style={{ border: '1px solid #000' }}>\r\n                        <Row>\r\n                            {console.log(this.state)}\r\n                            <Col md={9}>\r\n                                <h5 className=\"ml-3\">Provide access to Key Answers for all Candidates</h5>\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <CustomInput\r\n                                    type=\"switch\"\r\n                                    id=\"isKeyAnswerAvailable\"\r\n                                    name=\"isKeyAnswerAvailable\"\r\n                                    className=\"mt-2 mr-2 text-right\"\r\n                                    value={this.state.isKeyAnswerAvailable}\r\n                                    onChange={(e) => {\r\n                                        this.setState({ isKeyAnswerAvailable: !this.state.isKeyAnswerAvailable });\r\n                                        console.log(e.target.value);\r\n                                        this.sendState1();\r\n                                        // alert('Global State Changed')\r\n                                    }}\r\n                                    // label=\"Turn on this custom switch\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"row mt-3 mx-2\">\r\n                    <table className=\"table table-bordered\" style={{ border: '1px solid #000' }}>\r\n                        <Row>\r\n                            <Col md={9}>\r\n                                <h5 className=\"ml-3\">Accept Key Answers Challenges from Candidates</h5>\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <CustomInput\r\n                                    type=\"switch\"\r\n                                    id=\"isKeyAnswersChallengeable\"\r\n                                    name=\"isKeyAnswersChallengeable\"\r\n                                    className=\"mt-2 mr-2 text-right\"\r\n                                    value={this.state.isKeyAnswersChallengeable}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            isKeyAnswersChallengeable: !this.state.isKeyAnswersChallengeable,\r\n                                        });\r\n                                        console.log(e.target.value);\r\n                                        this.sendState2();\r\n                                        // alert('Global State Changed')\r\n                                    }}\r\n                                    // label=\"Turn on this custom switch\"\r\n                                />\r\n                            </Col>\r\n                            {console.log(this.state)}\r\n                        </Row>\r\n                    </table>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst RenderKeyAnswer = () => {\r\n    return (\r\n        <React.Fragment>\r\n            {/* <h4 className=\"header-title\">Key Answers</h4> */}\r\n            <div className=\"all-page-container\">\r\n                <AllPagesPDFViewer pdf={samplePDF} />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst TableRow = ({ id, title, priority, type, complete, remove }) => (\r\n    <tr>\r\n        <td>{id}</td>\r\n        <td>{title}</td>\r\n        <td>{priority}</td>\r\n        <td>{type}</td>\r\n        <td>{complete}</td>\r\n        <td className=\"remove\">\r\n            <button type=\"button\" class=\"btn btn-danger\" href=\"#\" onClick={() => remove(id)}>\r\n                Delete\r\n            </button>\r\n        </td>\r\n    </tr>\r\n);\r\n\r\nconst KeyAnswerChallenge = ({ data }) => {\r\n    return (\r\n        <React.Fragment>\r\n            {/* <h4 className=\"header-title mt-2\">Generated Result</h4> */}\r\n\r\n            <Row>\r\n                <Col>\r\n                    {/* <AdvancedTable /> */}\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Paper</th>\r\n                                <th scope=\"col\">Question No</th>\r\n                                <th scope=\"col\">Expected Key</th>\r\n                                <th scope=\"col\">Reason</th>\r\n                                {/* <th scope=\"col\">Handle</th> */}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {data.map((elem, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{elem.paper}</td>\r\n                                    <td>{elem.questionNo}</td>\r\n                                    <td>{elem.expectedKey}</td>\r\n                                    <td>{elem.reason}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nclass KeyAnswers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { activeTab: '1', notificationVar: [] };\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        db.collection('ChallengeKeyAnswer')\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    var data = {\r\n                        paper: doc.data().paper,\r\n                        questionNo: doc.data().questionNo,\r\n                        expectedKey: doc.data().expectedKey,\r\n                        reason: doc.data().reason,\r\n                    };\r\n                    this.state.notificationVar.push(data);\r\n                });\r\n                console.log('componentDidMount', this.state.notificationVar);\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Toggle the tab\r\n     */\r\n    toggle = (tab) => {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const tabContents = [\r\n            {\r\n                id: '1',\r\n                title: 'Upload Key Answers',\r\n                icon: 'uil-home-alt',\r\n                text: <GenerateKeyAnswer />,\r\n            },\r\n            {\r\n                id: '2',\r\n                title: 'View Key Answers',\r\n                icon: 'uil-user',\r\n                text: <RenderKeyAnswer />,\r\n            },\r\n            {\r\n                id: '3',\r\n                title: 'View Key Answer Challenges',\r\n                icon: 'uil-user',\r\n                text: <KeyAnswerChallenge data={this.state.notificationVar} />,\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h3 className=\"header-title mb-3 mt-3\">Key Answers</h3>\r\n                <Card>\r\n                    <CardBody>\r\n                        {/* <h5 className=\"header-title mb-3 mt-0\">Nav Pills</h5> */}\r\n                        <Nav className=\"nav nav-pills navtab-bg nav-justified\">\r\n                            {tabContents.map((tab, index) => {\r\n                                return (\r\n                                    <NavItem key={index}>\r\n                                        <NavLink\r\n                                            href=\"#\"\r\n                                            className={classnames({ active: this.state.activeTab === tab.id })}\r\n                                            onClick={() => {\r\n                                                this.toggle(tab.id);\r\n                                            }}>\r\n                                            <i className={classnames(tab.icon, 'd-sm-none', 'd-block', 'mr-1')}></i>\r\n                                            <span className=\"d-none d-sm-block\">{tab.title}</span>\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                );\r\n                            })}\r\n                        </Nav>\r\n\r\n                        <TabContent activeTab={this.state.activeTab}>\r\n                            {tabContents.map((tab, index) => {\r\n                                return (\r\n                                    <TabPane tabId={tab.id} key={index}>\r\n                                        <Row>\r\n                                            <Col sm=\"12\">\r\n                                                <p className=\"mt-2\">{tab.text}</p>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </TabPane>\r\n                                );\r\n                            })}\r\n                        </TabContent>\r\n                    </CardBody>\r\n                </Card>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default KeyAnswers;\r\n"],"sourceRoot":""}