{"version":3,"sources":["pages/admin/Notification.js"],"names":["SendNotification","Component","constructor","props","super","state","to","subject","body","componentDidMount","db","collection","get","then","querySnapshot","forEach","doc","data","this","notificationVar","push","console","log","sendData","event","preventDefault","set","alert","window","location","reload","error","message","render","className","sm","xl","method","action","row","for","md","type","name","id","placeholder","value","onChange","e","setState","target","rows","onClick","color","hash","Result","toggle","tab","activeTab","bind","tabContents","title","icon","text","GeneratedCards","Fragment","map","index","key","href","classnames","active","tabId","class","scope","elem"],"mappings":"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","file":"static/js/37.850c0648.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardBody,\r\n    TabContent,\r\n    TabPane,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button,\r\n    UncontrolledDropdown,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    DropdownToggle,\r\n    CustomInput,\r\n    Form,\r\n} from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport MaskedInput from 'react-text-mask';\r\n\r\nimport { db, auth, storage } from '../../helpers/firebase';\r\n\r\nclass SendNotification extends Component {\r\n    state = {\r\n        to: 'Everyone',\r\n        subject: '',\r\n        body: '',\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            notificationVar: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        db.collection('Notifcations')\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    var data = {\r\n                        subject: doc.data().subject,\r\n                        body: doc.data().body,\r\n                    };\r\n                    this.state.notificationVar.push(data);\r\n                });\r\n                console.log('componentDidMount', this.state.notificationVar);\r\n            });\r\n    };\r\n\r\n    sendData = (event) => {\r\n        console.log('sendData function', this.state);\r\n\r\n        event.preventDefault();\r\n        try {\r\n            var data = db.collection('Notifcations').doc();\r\n            data.set({\r\n                // uid: auth.currentUser.uid,\r\n                to: this.state.to,\r\n                subject: this.state.subject,\r\n                body: this.state.body,\r\n            });\r\n            alert('Notification added');\r\n            window.location.reload();\r\n        } catch (error) {\r\n            console.log('Notification');\r\n            console.log(error);\r\n            alert(error.message);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        return (\r\n            <div>\r\n                <Row className=\"page-title align-items-center\">\r\n                    <Col sm={4} xl={6}>\r\n                        <h4 className=\"mb-1 mt-0\">Send Notifications</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Card>\r\n                    <CardBody>\r\n                        <div>\r\n                            <Form method=\"POST\" action=\"/contact\">\r\n                                {/* <h4 className=\"header-title mt-0 mb-4\">Personal Details</h4> */}\r\n\r\n                                <FormGroup row>\r\n                                    <Label for=\"exampleEmail\" md={3}>\r\n                                        To\r\n                                    </Label>\r\n                                    <Col md={9}>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"to\"\r\n                                            id=\"to\"\r\n                                            placeholder=\"enter email\"\r\n                                            value={this.state.to}\r\n                                            onChange={(e) => {\r\n                                                this.setState({ to: e.target.value });\r\n                                                console.log(e.target.value);\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup row>\r\n                                    <Label for=\"phone\" md={3}>\r\n                                        Subject\r\n                                    </Label>\r\n                                    <Col md={9}>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"subject\"\r\n                                            id=\"subject\"\r\n                                            placeholder=\"Enter Subject\"\r\n                                            value={this.state.subject}\r\n                                            onChange={(e) => {\r\n                                                this.setState({ subject: e.target.value });\r\n                                                console.log(e.target.value);\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup row>\r\n                                    <Label for=\"phone\" md={3}>\r\n                                        Body\r\n                                    </Label>\r\n                                    <Col md={9}>\r\n                                        <Input\r\n                                            type=\"textarea\"\r\n                                            name=\"body\"\r\n                                            id=\"body\"\r\n                                            rows=\"6\"\r\n                                            placeholder=\"Enter Body of the message\"\r\n                                            value={this.state.body}\r\n                                            onChange={(e) => {\r\n                                                this.setState({ body: e.target.value });\r\n                                                console.log(e.target.value);\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n\r\n                                <ul className=\"list-inline wizard mb-0\">\r\n                                    <li className=\"next list-inline-item float-right\">\r\n                                        <Button onClick={this.sendData} color=\"success\">\r\n                                            Submit\r\n                                        </Button>\r\n                                        <div>\r\n                                            {window.location.hash === '#success' &&\r\n                                                <div id=\"success\">\r\n                                                    <p>Your message has been sent!</p>\r\n                                                </div>\r\n                                            }\r\n                                            {window.location.hash === '#error' &&\r\n                                                <div id=\"error\">\r\n                                                    <p>An error occured while submitting the form.</p>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </Form>\r\n                        </div>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Result extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { activeTab: '1', notificationVar: [] };\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n\r\n    //     };\r\n    // }\r\n\r\n    componentDidMount = () => {\r\n        db.collection('Notifcations')\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    var data = {\r\n                        subject: doc.data().subject,\r\n                        body: doc.data().body,\r\n                    };\r\n                    this.state.notificationVar.push(data);\r\n                });\r\n                console.log('componentDidMount', this.state.notificationVar);\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Toggle the tab\r\n     */\r\n    toggle = (tab) => {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const tabContents = [\r\n            {\r\n                id: '1',\r\n                title: 'Send Notification',\r\n                icon: 'uil-home-alt',\r\n                text: <SendNotification />,\r\n            },\r\n            {\r\n                id: '2',\r\n                title: 'View Notifications',\r\n                icon: 'uil-user',\r\n                text: <GeneratedCards data={this.state.notificationVar} />,\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h3 className=\"header-title mb-3 mt-3\">Notifications</h3>\r\n                <Card>\r\n                    <CardBody>\r\n                        {/* <h5 className=\"header-title mb-3 mt-0\">Nav Pills</h5> */}\r\n                        <Nav className=\"nav nav-pills navtab-bg nav-justified\">\r\n                            {tabContents.map((tab, index) => {\r\n                                return (\r\n                                    <NavItem key={index}>\r\n                                        <NavLink\r\n                                            href=\"#\"\r\n                                            className={classnames({ active: this.state.activeTab === tab.id })}\r\n                                            onClick={() => {\r\n                                                this.toggle(tab.id);\r\n                                            }}>\r\n                                            <i className={classnames(tab.icon, 'd-sm-none', 'd-block', 'mr-1')}></i>\r\n                                            <span className=\"d-none d-sm-block\">{tab.title}</span>\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                );\r\n                            })}\r\n                        </Nav>\r\n\r\n                        <TabContent activeTab={this.state.activeTab}>\r\n                            {tabContents.map((tab, index) => {\r\n                                return (\r\n                                    <TabPane tabId={tab.id} key={index}>\r\n                                        <Row>\r\n                                            <Col sm=\"12\">\r\n                                                <p className=\"mt-2\">{tab.text}</p>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </TabPane>\r\n                                );\r\n                            })}\r\n                        </TabContent>\r\n                    </CardBody>\r\n                </Card>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst GeneratedCards = ({ data }) => {\r\n    return (\r\n        <React.Fragment>\r\n            {/* <h4 className=\"header-title mt-2\">Generated Result</h4> */}\r\n\r\n            <Row>\r\n                <Col>\r\n                    {/* <AdvancedTable /> */}\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Subject</th>\r\n                                <th scope=\"col\">Body</th>\r\n                                {/* <th scope=\"col\">Handle</th> */}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {data.map((elem, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td className=\"font-weight-bold\">{elem.subject}</td>\r\n                                    <td>{elem.body}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Result;\r\n"],"sourceRoot":""}