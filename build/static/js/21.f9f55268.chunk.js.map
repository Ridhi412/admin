{"version":3,"sources":["components/PageTitle.js","../node_modules/pdfjs-dist/build sync","pages/admin/PDF/all-pages.js","pages/admin/QuestionPaper.pdf","pages/admin/QuestionPaper.js"],"names":["PageTitle","props","title","items","breadCrumbItems","Fragment","className","to","map","item","index","active","key","label","path","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","AllPages","useState","numPages","setNumPages","pdf","file","options","workerSrc","onLoadSuccess","Array","from","el","pageNumber","pdfjs","GlobalWorkerOptions","version","GenerateAdmitCard","Component","state","questionPaper","isQuestionPaperAvailable","render","row","for","md","type","name","value","this","onChange","setState","target","console","log","onClick","sendData","color","style","height","background","class","border","alert","RenderQuestionPaper","samplePDF","QuestionPaper","constructor","super","toggle","tab","activeTab","bind","tabContents","icon","text","href","classnames","tabId","sm"],"mappings":"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","file":"static/js/21.f9f55268.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\n/**\r\n * Renders the PageTitle\r\n */\r\nconst PageTitle = (props) => {\r\n    const title = props.title || \"\";\r\n    const items = props.breadCrumbItems || \"\";\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Breadcrumb className=\"float-right mt-1 font-size-14\">\r\n                <BreadcrumbItem>\r\n                    <Link to=\"/\">Shreyu</Link>\r\n                </BreadcrumbItem>\r\n                {items.map((item, index) => {\r\n                    return item.active ? (\r\n                        <BreadcrumbItem active key={index}>\r\n                            {item.label}\r\n                        </BreadcrumbItem>\r\n                    ) : (\r\n                            <BreadcrumbItem key={index}>\r\n                                <Link to={item.path}>{item.label}</Link>\r\n                            </BreadcrumbItem>\r\n                        );\r\n                })}\r\n            </Breadcrumb>\r\n\r\n            <h4 className=\"mb-1 mt-0\">{title}</h4>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PageTitle;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 177;","import React, { useState } from \"react\";\r\nimport { Document, Page } from \"react-pdf\";\r\n\r\nexport default function AllPages(props) {\r\n  const [numPages, setNumPages] = useState(null);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  const { pdf } = props;\r\n\r\n  return (\r\n    <Document\r\n      file={pdf}\r\n      options={{ workerSrc: \"./../pdf.worker.js\" }}\r\n      onLoadSuccess={onDocumentLoadSuccess}\r\n    >\r\n      {Array.from(new Array(numPages), (el, index) => (\r\n        <Page key={`page_${index + 1}`} pageNumber={index + 1} />\r\n      ))}\r\n    </Document>\r\n  );\r\n}","module.exports = __webpack_public_path__ + \"static/media/QuestionPaper.fd351876.pdf\";","import React, {Component} from 'react';\r\nimport { Row, Col, Card, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, FormGroup, Label, Input, Button,UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, CustomInput } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\n// import { Document, Page } from 'react-pdf';\r\n\r\nimport samplePDF from './QuestionPaper.pdf';\r\nimport SinglePagePDFViewer from \"./PDF/single-page\";\r\nimport AllPagesPDFViewer from \"./PDF/all-pages\";\r\n\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nclass GenerateAdmitCard extends Component {\r\n    \r\n    state = {\r\n        questionPaper:\"\",\r\n        isQuestionPaperAvailable: false\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <h4 className=\"header-title\">Upload Question Paper</h4>\r\n                \r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <CardBody>\r\n                            <FormGroup row>\r\n                                <Label for=\"questionPaper\" md={3}>\r\n                                    Upload Question Paper\r\n                                </Label>\r\n                                <Col md={9}>\r\n                                    <Input\r\n                                        type=\"file\"\r\n                                        name=\"questionPaper\"\r\n                                        id=\"questionPaper\"\r\n                                        // placeholder=\"enter register no.\"\r\n                                        value={this.state.questionPaper}\r\n                                            onChange={e => {\r\n                                            this.setState({questionPaper: e.target.value})\r\n                                            console.log(e.target.value);\r\n                                            }\r\n                                        }\r\n                                    />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            \r\n                            \r\n                            <div className=\"text-right\">\r\n                                <Button className=\"pull-right\" onClick={this.sendData} color=\"success\">Upload</Button>\r\n                            </div>                                        \r\n\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <hr style={{height:\"1px\", color:\"black\", background:\"black\"}}/>\r\n\r\n                <div class=\"row mt-5 mx-2\">\r\n                    <table className=\"table table-bordered\" style={{border: \"1px solid #000\"}}>\r\n                        <Row>\r\n                            {console.log(this.state)}\r\n                            <Col md={9}>\r\n                                <h5 className=\"ml-3\">Provide access to Question Paper for all Candidates</h5>\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <CustomInput\r\n                                    type=\"switch\"\r\n                                    id=\"exampleCustomSwitch\"\r\n                                    name=\"customSwitch\"\r\n                                    className=\"mt-2 mr-2 text-right\"\r\n                                    value={this.state.isQuestionPaperAvailable}\r\n                                    onChange={e => {\r\n                                        this.setState({isQuestionPaperAvailable: !this.state.isQuestionPaperAvailable\r\n                                        })\r\n                                        console.log(e.target.value);\r\n                                        alert('Global State Changed')\r\n                                    }\r\n                                    }\r\n                                    // label=\"Turn on this custom switch\"\r\n                                />  \r\n                            </Col>\r\n                        </Row>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nconst RenderQuestionPaper = () => {\r\n    return (\r\n        <React.Fragment>\r\n            {/* <h4 className=\"header-title\">Question Paper</h4> */}\r\n            <div className=\"all-page-container\">\r\n                <AllPagesPDFViewer pdf={samplePDF} />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n    class QuestionPaper extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = { activeTab: '1' };\r\n            this.toggle = this.toggle.bind(this);\r\n        }\r\n    \r\n        /**\r\n         * Toggle the tab\r\n         */\r\n        toggle = (tab) => {\r\n            if (this.state.activeTab !== tab) {\r\n                this.setState({\r\n                    activeTab: tab,\r\n                });\r\n            }\r\n        };\r\n    \r\n        render() {\r\n            const tabContents = [\r\n                {\r\n                    id: '1',\r\n                    title: 'Upload Question Paper',\r\n                    icon: 'uil-home-alt',\r\n                    text:\r\n                        <GenerateAdmitCard/>\r\n                },\r\n                {\r\n                    id: '2',\r\n                    title: 'View Question Paper',\r\n                    icon: 'uil-user',\r\n                    text:\r\n                        <RenderQuestionPaper/>\r\n                },\r\n            ];\r\n    \r\n            return (\r\n                <React.Fragment>\r\n                    <h3 className=\"header-title mb-3 mt-3\">Question Paper</h3>\r\n                    <Card>\r\n                        <CardBody>\r\n                            {/* <h5 className=\"header-title mb-3 mt-0\">Nav Pills</h5> */}\r\n                            <Nav className=\"nav nav-pills navtab-bg nav-justified\">\r\n                                {tabContents.map((tab, index) => {\r\n                                    return (\r\n                                        <NavItem key={index}>\r\n                                            <NavLink\r\n                                                href=\"#\"\r\n                                                className={classnames({ active: this.state.activeTab === tab.id })}\r\n                                                onClick={() => {\r\n                                                    this.toggle(tab.id);\r\n                                                }}>\r\n                                                <i\r\n                                                    className={classnames(\r\n                                                        tab.icon,\r\n                                                        'd-sm-none',\r\n                                                        'd-block',\r\n                                                        'mr-1'\r\n                                                    )}></i>\r\n                                                <span className=\"d-none d-sm-block\" >{tab.title}</span>\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                    );\r\n                                })}\r\n                            </Nav>\r\n    \r\n                            <TabContent activeTab={this.state.activeTab}>\r\n                                {tabContents.map((tab, index) => {\r\n                                    return (\r\n                                        <TabPane tabId={tab.id} key={index}>\r\n                                            <Row>\r\n                                                <Col sm=\"12\">\r\n                                                    <p className=\"mt-2\">{tab.text}</p>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </TabPane>\r\n                                    );\r\n                                })}\r\n                            </TabContent>\r\n                        </CardBody>\r\n                    </Card>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default QuestionPaper;\r\n"],"sourceRoot":""}