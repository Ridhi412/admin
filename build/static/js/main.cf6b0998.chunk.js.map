{"version":3,"sources":["helpers/firebase.js","redux/appMenu/constants.js","constants/layout.js","redux/auth/actions.js","helpers/authUtils.js","redux/layout/actions.js","redux/appMenu/actions.js","redux/auth/constants.js","components/Layout.js","routes/index.js","routes/Routes.js","helpers/fake-backend.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/sagas.js","redux/store.js","index.js","redux/layout/constants.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","settings","cacheSizeBytes","CACHE_SIZE_UNLIMITED","enablePersistence","then","res","console","log","catch","err","code","db","storage","auth","INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","loginUser","username","password","type","LOGIN_USER","payload","loginUserSuccess","user","LOGIN_USER_SUCCESS","loginUserFailed","error","LOGIN_USER_FAILED","registerUser","fullname","email","REGISTER_USER","registerUserSuccess","REGISTER_USER_SUCCESS","registerUserFailed","REGISTER_USER_FAILED","logoutUser","history","LOGOUT_USER","forgetPasswordSuccess","passwordResetStatus","FORGET_PASSWORD_SUCCESS","forgetPasswordFailed","FORGET_PASSWORD_FAILED","isUserAuthenticated","getLoggedInUser","Cookies","localStorage","getItem","userName","uid","firstName","lastName","role","JSON","parse","loginUserFireBase","a","signInWithEmailAndPassword","currentUser","Name","collection","doc","setItem","get","exists","data","fname","setTimeout","window","location","reload","alert","message","registerUserFirebase","phone","lname","appNumber","createUserWithEmailAndPassword","createdUser","dataTest","set","applicationNumber","createdAt","Date","now","increment","FieldValue","appNum","update","current","changeLayout","layout","CHANGE_LAYOUT","changeLayoutWidth","width","CHANGE_LAYOUT_WIDTH","changeSidebarTheme","theme","CHANGE_SIDEBAR_THEME","changeSidebarType","sidebarType","CHANGE_SIDEBAR_TYPE","showRightSidebar","SHOW_RIGHT_SIDEBAR","hideRightSidebar","HIDE_RIGHT_SIDEBAR","initMenu","initMenuSuccess","menuItems","changeActiveMenuFromLocation","changeActiveMenuFromLocationSuccess","activatedMenuItemIds","FORGET_PASSWORD","AuthLayout","React","lazy","VerticalLayout","HorizontalLayout","withLayout","WrappedComponent","HOC","Component","getLayout","layoutCls","this","props","layoutType","layoutConstants","render","Layout","fallback","connect","state","Login","Logout","Register","ForgetPassword","Confirm","Dashboard","ApplicationForm","CandidateDetails","Payment","AdmitCard","QuestionPaper","KeyAnswers","Result","Notification","ReportIssue","CandidateLogout","PrivateRoute","component","roles","rest","to","pathname","from","loggedInUser","indexOf","rootRoute","path","exact","route","dashboardRoutes","name","icon","FeatherIcon","header","badge","variant","text","implementedAppRoutes","paymentRoutes","appRoutes","authRoutes","children","Route","flattenRoutes","routes","flatRoutes","forEach","item","push","allRoutes","authProtectedRoutes","allFlattenRoutes","Routes","map","index","key","users","id","realFetch","fetch","url","opts","Promise","resolve","reject","endsWith","method","params","body","filteredUsers","filter","length","responseJson","token","ok","json","split","newUser","headers","Authorization","response","configureFakeBackend","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","action","TOGGLE_RIGHT_SIDEBAR","loading","Auth","AppMenu","combineReducers","fetchJSON","options","status","login","logout","forgetPassword","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","stringify","remove","call","put","takeEvery","all","fork","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","value","document","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","uuid","assignIdAndParent","parentId","active","initMenuAndItems","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","menuItem","assignIds","rootSaga","getState","layoutSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","getElementById","URL","process","href","origin","addEventListener","contentType","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cf6b0998.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: 'AIzaSyCnB6bVU3l1o6NSim96hYMqVYQXT8p-1ek',\r\n    authDomain: 'stet-d84bf.firebaseapp.com',\r\n    databaseURL: 'https://stet-d84bf.firebaseio.com',\r\n    projectId: 'stet-d84bf',\r\n    storageBucket: 'stet-d84bf.appspot.com',\r\n    messagingSenderId: '851022538939',\r\n    appId: '1:851022538939:web:6314530885f6b6dadb619e',\r\n    measurementId: 'G-9SNP6LVLN7',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nfirebase.firestore().settings({\r\n    cacheSizeBytes: firebase.firestore.CACHE_SIZE_UNLIMITED,\r\n});\r\n\r\nfirebase\r\n    .firestore()\r\n    .enablePersistence()\r\n    .then((res) => {\r\n        console.log('offline Mode Enabale');\r\n    })\r\n    .catch(function (err) {\r\n        if (err.code === 'failed-precondition') {\r\n            console.log(err);\r\n        } else if (err.code === 'unimplemented') {\r\n            console.log(err);\r\n        }\r\n    });\r\n\r\n/** Requires timestamp settings for later versions of firebase */\r\nexport const db = firebase.firestore();\r\nexport const auth = firebase.auth();\r\nexport const storage = firebase.storage();\r\nexport default firebase;\r\n","/* APP MENU */\r\nexport const INIT_MENU = 'INIT_MENU';\r\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\r\n","/* Layout types and other constants */\r\n\r\nexport const LAYOUT_VERTICAL = 'vertical';\r\nexport const LAYOUT_HORIZONTAL = 'topnav';\r\n\r\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\r\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\r\n\r\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\r\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\r\n\r\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\r\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\r\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\n\r\nexport const loginUser = (username, password) => ({\r\n    type: LOGIN_USER,\r\n    payload: { username, password },\r\n});\r\n\r\nexport const loginUserSuccess = (user) => ({\r\n    type: LOGIN_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const loginUserFailed = (error) => ({\r\n    type: LOGIN_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const registerUser = (fullname, email, password) => ({\r\n    type: REGISTER_USER,\r\n    payload: { fullname, email, password },\r\n});\r\n\r\nexport const registerUserSuccess = (user) => ({\r\n    type: REGISTER_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const registerUserFailed = (error) => ({\r\n    type: REGISTER_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const logoutUser = (history) => ({\r\n    type: LOGOUT_USER,\r\n    payload: { history },\r\n});\r\n\r\nexport const forgetPassword = (username) => ({\r\n    type: FORGET_PASSWORD,\r\n    payload: { username },\r\n});\r\n\r\nexport const forgetPasswordSuccess = (passwordResetStatus) => ({\r\n    type: FORGET_PASSWORD_SUCCESS,\r\n    payload: passwordResetStatus,\r\n});\r\n\r\nexport const forgetPasswordFailed = (error) => ({\r\n    type: FORGET_PASSWORD_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport jwtDecode from 'jwt-decode';\r\nimport { Cookies } from 'react-cookie';\r\n// import firebase from './firebase';\r\n\r\n// import * as firebase from 'firebase';\r\nimport { db } from './firebase';\r\nimport firebase from './firebase';\r\n\r\ndb.settings({\r\n    cacheSizeBytes: firebase.firestore.CACHE_SIZE_UNLIMITED,\r\n});\r\n\r\n// db.enablePersistence()\r\n//     .then((res) => {\r\n//         console.log('offline Mode Enabale');\r\n//     })\r\n//     .catch(function (err) {\r\n//         if (err.code === 'failed-precondition') {\r\n//             console.log(err);\r\n//         } else if (err.code === 'unimplemented') {\r\n//             console.log(err);\r\n//         }\r\n//     });\r\n\r\nconst isUserAuthenticated = () => {\r\n    const user = getLoggedInUser();\r\n    console.log(user);\r\n    if (!user || user === null) {\r\n        return false;\r\n    } else {\r\n        console.log('here true');\r\n        return true;\r\n    }\r\n};\r\n\r\nconst getLoggedInUser = () => {\r\n    const cookies = new Cookies();\r\n\r\n    var user = null;\r\n\r\n    console.log('username', localStorage.getItem('username'));\r\n\r\n    if (localStorage.getItem('username') !== null && localStorage.getItem('uid') !== null) {\r\n        var userName = localStorage.getItem('username');\r\n        var uid = localStorage.getItem('uid');\r\n        // console.log(username, uid);\r\n\r\n        // const user = { username: 'username', uid: 'uid' };\r\n        user = {\r\n            uid: uid,\r\n            username: userName,\r\n            password: 'test',\r\n            firstName: 'Test',\r\n            lastName: 'User',\r\n            role: 'Admin',\r\n        };\r\n    } else {\r\n        user = null;\r\n    }\r\n\r\n    // const user = null;\r\n\r\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\r\n};\r\n\r\nconst loginUserFireBase = async (email, password) => {\r\n    console.log('sendData', email, password);\r\n    try {\r\n        await firebase.auth().signInWithEmailAndPassword(email, password);\r\n        console.log(firebase.auth().currentUser.uid);\r\n        var Name = db.collection('users').doc(firebase.auth().currentUser.uid);\r\n        console.log('Name', Name);\r\n        localStorage.setItem('username', firebase.auth().currentUser.email);\r\n        localStorage.setItem('uid', firebase.auth().currentUser.uid);\r\n        localStorage.setItem('Name', firebase.auth().currentUser.uid);\r\n        // var docRef = db.collection(\"cities\").doc(\"SF\");\r\n\r\n        Name.get()\r\n            .then(function (doc) {\r\n                if (doc.exists) {\r\n                    console.log('Document data:', doc.data());\r\n                    localStorage.setItem('Name', doc.data().fname);\r\n                } else {\r\n                    // doc.data() will be undefined in this case\r\n                    console.log('No such document!');\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log('Error getting document:', error);\r\n            });\r\n        setTimeout(() => {\r\n            window.location.reload(false);\r\n        }, 2000);\r\n    } catch (err) {\r\n        console.log(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nconst registerUserFirebase = async (email, phone, fname, lname, password, appNumber) => {\r\n    console.log(email, password);\r\n    try {\r\n        let createdUser = await firebase.auth().createUserWithEmailAndPassword(email, password);\r\n\r\n        console.log(createdUser);\r\n\r\n        var dataTest = db.collection('users').doc(firebase.auth().currentUser.uid);\r\n\r\n        await dataTest.set({\r\n            fname: fname,\r\n            lname: lname,\r\n            email: email,\r\n            phone: phone,\r\n            applicationNumber: appNumber,\r\n            createdAt: Date.now(),\r\n        });\r\n\r\n        const increment = firebase.firestore.FieldValue.increment(1);\r\n\r\n        const appNum = db.collection('Global_Variables').doc('currentApplicationNumber');\r\n\r\n        await appNum.update({ current: increment });\r\n\r\n        alert('user created successfully');\r\n        localStorage.setItem('username', firebase.auth().currentUser.email);\r\n        localStorage.setItem('uid', firebase.auth().currentUser.uid);\r\n        localStorage.setItem('Name', fname);\r\n        window.location.reload();\r\n    } catch (error) {\r\n        console.log('here');\r\n        console.log(error);\r\n        alert(error.message);\r\n    }\r\n};\r\n\r\nexport { isUserAuthenticated, getLoggedInUser, loginUserFireBase, registerUserFirebase };\r\n","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\n\r\nexport const changeLayout = (layout) => ({\r\n    type: CHANGE_LAYOUT,\r\n    payload: layout,\r\n});\r\n\r\nexport const changeLayoutWidth = (width) => ({\r\n    type: CHANGE_LAYOUT_WIDTH,\r\n    payload: width,\r\n});\r\n\r\nexport const changeSidebarTheme = (theme) => ({\r\n    type: CHANGE_SIDEBAR_THEME,\r\n    payload: theme,\r\n});\r\n\r\nexport const changeSidebarType = (sidebarType) => ({\r\n    type: CHANGE_SIDEBAR_TYPE,\r\n    payload: sidebarType,\r\n});\r\n\r\nexport const toggleRightSidebar = () => ({\r\n    type: TOGGLE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const showRightSidebar = () => ({\r\n    type: SHOW_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const hideRightSidebar = () => ({\r\n    type: HIDE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\nexport const initMenu = () => ({\r\n    type: INIT_MENU,\r\n    payload: {},\r\n});\r\n\r\nexport const initMenuSuccess = (menuItems) => ({\r\n    type: INIT_MENU_SUCCESS,\r\n    payload: { menuItems },\r\n});\r\n\r\nexport const changeActiveMenuFromLocation = () => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    payload: {},\r\n});\r\n\r\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds) => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n    payload: { activatedMenuItemIds },\r\n});\r\n","/* AUTH */\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\r\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\r\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\r\n","// @flow\r\nimport React, { Component, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { isUserAuthenticated } from '../helpers/authUtils';\r\nimport * as layoutConstants from '../constants/layout';\r\n\r\n// Lazy loading and code splitting -\r\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\r\nconst loading = () => <div></div>;\r\n\r\n// All layouts/containers\r\nconst AuthLayout = React.lazy(() => import('../layouts/Auth'));\r\nconst VerticalLayout = React.lazy(() => import('../layouts/Vertical'));\r\nconst HorizontalLayout = React.lazy(() => import('../layouts/Horizontal'));\r\n\r\n\r\n/**\r\n * Exports the component with layout wrapped to it\r\n * @param {} WrappedComponent\r\n */\r\nconst withLayout = (WrappedComponent) => {\r\n    const HOC = class extends Component {\r\n        /**\r\n         * Returns the layout component based on different properties\r\n         */\r\n        getLayout = () => {\r\n            if (!isUserAuthenticated()) return AuthLayout;\r\n\r\n            let layoutCls = VerticalLayout;\r\n\r\n            switch (this.props.layout.layoutType) {\r\n                case layoutConstants.LAYOUT_HORIZONTAL:\r\n                    layoutCls = HorizontalLayout;\r\n                    break;\r\n                default:\r\n                    layoutCls = VerticalLayout;\r\n                    break;\r\n            }\r\n            return layoutCls;\r\n        };\r\n\r\n        render() {\r\n            const Layout = this.getLayout();\r\n            return (\r\n                <Suspense fallback={loading()}>\r\n                    <Layout {...this.props}>\r\n                        <WrappedComponent {...this.props} />\r\n                    </Layout>\r\n                </Suspense>\r\n            );\r\n        }\r\n    };\r\n\r\n    const mapStateToProps = state => {\r\n        return {\r\n            layout: state.Layout,\r\n        };\r\n    };\r\n\r\n    return connect(\r\n        mapStateToProps,\r\n        null\r\n    )(HOC);\r\n};\r\n\r\nexport default withLayout;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Route } from 'react-router-dom';\r\nimport * as FeatherIcon from 'react-feather';\r\n\r\nimport { isUserAuthenticated, getLoggedInUser } from '../helpers/authUtils';\r\n\r\n// auth\r\nconst Login = React.lazy(() => import('../pages/auth/Login'));\r\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\r\nconst Register = React.lazy(() => import('../pages/auth/Register'));\r\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\r\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\r\n// dashboard\r\nconst Dashboard = React.lazy(() => import('../pages/dashboard'));\r\n// apps\r\n// const CalendarApp = React.lazy(() => import('../pages/apps/Calendar'));\r\n// const EmailInbox = React.lazy(() => import('../pages/apps/Email/Inbox'));\r\n// const EmailDetail = React.lazy(() => import('../pages/apps/Email/Detail'));\r\n// const EmailCompose = React.lazy(() => import('../pages/apps/Email/Compose'));\r\n// const ProjectList = React.lazy(() => import('../pages/apps/Project/List'));\r\n// const ProjectDetail = React.lazy(() => import('../pages/apps/Project/Detail/'));\r\n// const TaskList = React.lazy(() => import('../pages/apps/Tasks/List'));\r\n// const TaskBoard = React.lazy(() => import('../pages/apps/Tasks/Board'));\r\n\r\n// pages\r\n// const Starter = React.lazy(() => import('../pages/other/Starter'));\r\n\r\nconst ApplicationForm = React.lazy(() => import('../pages/admin/ApplicationForm'));\r\nconst CandidateDetails = React.lazy(() => import('../pages/admin/CandidateDetails'));\r\nconst Payment = React.lazy(() => import('../pages/admin/Payment'));\r\nconst AdmitCard = React.lazy(() => import('../pages/admin/AdmitCard'));\r\nconst QuestionPaper = React.lazy(() => import('../pages/admin/QuestionPaper'));\r\nconst KeyAnswers = React.lazy(() => import('../pages/admin/KeyAnswers'));\r\nconst Result = React.lazy(() => import('../pages/admin/Result'));\r\nconst Notification = React.lazy(() => import('../pages/admin/Notification'));\r\nconst ReportIssue = React.lazy(() => import('../pages/admin/ReportIssue'));\r\nconst CandidateLogout = React.lazy(() => import('../pages/admin/Logout'));\r\n\r\n// const Profile = React.lazy(() => import('../pages/other/Profile/'));\r\n// const Activity = React.lazy(() => import('../pages/other/Activity'));\r\n// const Invoice = React.lazy(() => import('../pages/other/Invoice'));\r\n// const Pricing = React.lazy(() => import('../pages/other/Pricing'));\r\n// const Error404 = React.lazy(() => import('../pages/other/Error404'));\r\n// const Error500 = React.lazy(() => import('../pages/other/Error500'));\r\n\r\n// // ui\r\n// const BSComponents = React.lazy(() => import('../pages/uikit/BSComponents/'));\r\n// const FeatherIcons = React.lazy(() => import('../pages/uikit/Icons/Feather'));\r\n// const UniconsIcons = React.lazy(() => import('../pages/uikit/Icons/Unicons'));\r\n// const Widgets = React.lazy(() => import('../pages/uikit/Widgets/'));\r\n\r\n// // charts\r\n// const Charts = React.lazy(() => import('../pages/charts/'));\r\n\r\n// // forms\r\n// const BasicForms = React.lazy(() => import('../pages/forms/Basic'));\r\n// const FormAdvanced = React.lazy(() => import('../pages/forms/Advanced'));\r\n// const FormValidation = React.lazy(() => import('../pages/forms/Validation'));\r\n// const FormWizard = React.lazy(() => import('../pages/forms/Wizard'));\r\n// const FileUpload = React.lazy(() => import('../pages/forms/FileUpload'));\r\n// const Editor = React.lazy(() => import('../pages/forms/Editor'));\r\n\r\n// // tables\r\n// const BasicTables = React.lazy(() => import('../pages/tables/Basic'));\r\n// const AdvancedTables = React.lazy(() => import('../pages/tables/Advanced'));\r\n\r\n// handle auth and authorization\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) => {\r\n            if (!isUserAuthenticated()) {\r\n                // not logged in so redirect to login page with the return url\r\n                return <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />;\r\n            }\r\n\r\n            const loggedInUser = getLoggedInUser();\r\n            // check if route is restricted by role\r\n            if (roles && roles.indexOf(loggedInUser.role) === -1) {\r\n                // role not authorised so redirect to home page\r\n                return <Redirect to={{ pathname: '/' }} />;\r\n            }\r\n\r\n            // authorised so return component\r\n            return <Component {...props} />;\r\n        }}\r\n    />\r\n);\r\n\r\n// root routes\r\nconst rootRoute = {\r\n    path: '/',\r\n    exact: true,\r\n    component: () => <Redirect to=\"/dashboard\" />,\r\n    route: PrivateRoute,\r\n};\r\n\r\n// dashboards\r\nconst dashboardRoutes = {\r\n    path: '/dashboard',\r\n    name: 'Dashboard',\r\n    icon: FeatherIcon.Home,\r\n    header: 'Navigation',\r\n    badge: {\r\n        variant: 'success',\r\n        text: '1',\r\n    },\r\n    component: Dashboard,\r\n    roles: ['Admin'],\r\n    route: PrivateRoute,\r\n};\r\n\r\nconst implementedAppRoutes = {\r\n    path: '/admin/ApplicationForm',\r\n    name: 'Application Form',\r\n    header: 'My Implementations',\r\n    icon: FeatherIcon.Calendar,\r\n    component: ApplicationForm,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\n\r\nconst paymentRoutes = {\r\n    path: '/admin/payment',\r\n    name: 'Payment Details',\r\n    // header: 'My Implementations',\r\n    icon: FeatherIcon.Calendar,\r\n    component: Payment,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\n\r\nconst CandidateDetailsRoutes = {\r\n    path: '/admin/CandidateDetails',\r\n    name: 'Candidate Details',\r\n    icon: FeatherIcon.Calendar,\r\n    component: CandidateDetails,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\n\r\nconst AdmitCardRoutes = {\r\n    path: '/admin/AdmitCard',\r\n    name: 'Generate Admit Card',\r\n    // header: 'My Implementations',\r\n    icon: FeatherIcon.Calendar,\r\n    component: AdmitCard,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\n\r\nconst QuestionPaperRoutes = {\r\n    path: '/admin/QuestionPaper',\r\n    name: 'Question Paper',\r\n    // header: 'My Implementations',\r\n    icon: FeatherIcon.Calendar,\r\n    component: QuestionPaper,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\n\r\nconst KeyAnswersRoutes = {\r\n    path: '/admin/KeyAnswers',\r\n    name: 'Key Answers',\r\n    // header: 'My Implementations',\r\n    icon: FeatherIcon.Calendar,\r\n    component: KeyAnswers,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\n\r\nconst ResultRoutes = {\r\n    path: '/admin/Result',\r\n    name: 'Result',\r\n    // header: 'My Implementations',\r\n    icon: FeatherIcon.Calendar,\r\n    component: Result,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\n\r\nconst NotificationRoutes = {\r\n    path: '/admin/Notification',\r\n    name: 'Notification',\r\n    // header: 'My Implementations',\r\n    icon: FeatherIcon.Calendar,\r\n    component: Notification,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\n\r\nconst ReportIssueRoutes = {\r\n    path: '/admin/ReportIssue',\r\n    name: 'Report Issue',\r\n    // header: 'My Implementations',\r\n    icon: FeatherIcon.Calendar,\r\n    component: ReportIssue,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\n\r\nconst CandidateLogoutRoutes = {\r\n    path: '/admin/CandidateLogout',\r\n    name: 'Logout',\r\n    // header: 'My Implementations',\r\n    icon: FeatherIcon.Calendar,\r\n    component: CandidateLogout,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\n\r\n// apps\r\n\r\n// const calendarAppRoutes = {\r\n//     path: '/apps/calendar',\r\n//     name: 'Calendar',\r\n//     header: 'Apps',\r\n//     icon: FeatherIcon.Calendar,\r\n//     component: CalendarApp,\r\n//     route: PrivateRoute,\r\n//     roles: ['Admin'],\r\n// };\r\n\r\n// const emailAppRoutes = {\r\n//     path: '/apps/email',\r\n//     name: 'Email',\r\n//     icon: FeatherIcon.Inbox,\r\n//     children: [\r\n//         {\r\n//             path: '/apps/email/inbox',\r\n//             name: 'Inbox',\r\n//             component: EmailInbox,\r\n//             route: PrivateRoute,\r\n//             roles: ['Admin'],\r\n//         },\r\n//         {\r\n//             path: '/apps/email/details',\r\n//             name: 'Details',\r\n//             component: EmailDetail,\r\n//             route: PrivateRoute,\r\n//             roles: ['Admin'],\r\n//         },\r\n//         {\r\n//             path: '/apps/email/compose',\r\n//             name: 'Compose',\r\n//             component: EmailCompose,\r\n//             route: PrivateRoute,\r\n//             roles: ['Admin'],\r\n//         },\r\n//     ]\r\n// };\r\n\r\n// const projectAppRoutes = {\r\n//     path: '/apps/projects',\r\n//     name: 'Projects',\r\n//     icon: FeatherIcon.Briefcase,\r\n//     children: [\r\n//         {\r\n//             path: '/apps/projects/list',\r\n//             name: 'List',\r\n//             component: ProjectList,\r\n//             route: PrivateRoute,\r\n//             roles: ['Admin'],\r\n//         },\r\n//         {\r\n//             path: '/apps/projects/detail',\r\n//             name: 'Detail',\r\n//             component: ProjectDetail,\r\n//             route: PrivateRoute,\r\n//             roles: ['Admin'],\r\n//         },\r\n//     ]\r\n// };\r\n\r\n// const taskAppRoutes = {\r\n//     path: '/apps/tasks',\r\n//     name: 'Tasks',\r\n//     icon: FeatherIcon.Bookmark,\r\n//     children: [\r\n//         {\r\n//             path: '/apps/tasks/list',\r\n//             name: 'List',\r\n//             component: TaskList,\r\n//             route: PrivateRoute,\r\n//             roles: ['Admin'],\r\n//         },\r\n//         {\r\n//             path: '/apps/tasks/board',\r\n//             name: 'Board',\r\n//             component: TaskBoard,\r\n//             route: PrivateRoute,\r\n//             roles: ['Admin'],\r\n//         },\r\n//     ],\r\n// };\r\n\r\nconst appRoutes = [\r\n    implementedAppRoutes,\r\n    CandidateDetailsRoutes,\r\n    paymentRoutes,\r\n    AdmitCardRoutes,\r\n    QuestionPaperRoutes,\r\n    KeyAnswersRoutes,\r\n    ResultRoutes,\r\n    NotificationRoutes,\r\n    ReportIssueRoutes,\r\n    CandidateLogoutRoutes,\r\n];\r\n\r\n// pages\r\n// const pagesRoutes = {\r\n//     path: '/pages',\r\n//     name: 'Pages',\r\n//     header: 'Custom',\r\n//     icon: FeatherIcon.FileText,\r\n//     children: [\r\n//         {\r\n//             path: '/pages/starter',\r\n//             name: 'Starter',\r\n//             component: Starter,\r\n//             route: PrivateRoute,\r\n//             roles: ['Admin'],\r\n//         },\r\n//         {\r\n//             path: '/pages/starter2',\r\n//             name: 'Starter2',\r\n//             component: Starter,\r\n//             route: PrivateRoute,\r\n//             roles: ['Admin'],\r\n//         },\r\n//         {\r\n//             path: '/pages/profile',\r\n//             name: 'Profile',\r\n//             component: Profile,\r\n//             route: PrivateRoute,\r\n//             roles: ['Admin'],\r\n//         },\r\n//         {\r\n//             path: '/pages/activity',\r\n//             name: 'Activity',\r\n//             component: Activity,\r\n//             route: PrivateRoute,\r\n//             roles: ['Admin'],\r\n//         },\r\n//         {\r\n//             path: '/pages/invoice',\r\n//             name: 'Invoice',\r\n//             component: Invoice,\r\n//             route: PrivateRoute,\r\n//             roles: ['Admin'],\r\n//         },\r\n//         {\r\n//             path: '/pages/pricing',\r\n//             name: 'Pricing',\r\n//             component: Pricing,\r\n//             route: PrivateRoute,\r\n//             roles: ['Admin'],\r\n//         },\r\n//         {\r\n//             path: '/pages/error-404',\r\n//             name: 'Error 404',\r\n//             component: Error404,\r\n//             route: Route\r\n//         },\r\n//         {\r\n//             path: '/pages/error-500',\r\n//             name: 'Error 500',\r\n//             component: Error500,\r\n//             route: Route\r\n//         },\r\n//     ]\r\n// };\r\n\r\n// components\r\n// const componentsRoutes = {\r\n//     path: '/ui',\r\n//     name: 'UI Elements',\r\n//     header: 'Components',\r\n//     icon: FeatherIcon.Package,\r\n//     children: [\r\n//         {\r\n//             path: '/ui/bscomponents',\r\n//             name: 'Bootstrap UI',\r\n//             component: BSComponents,\r\n//             route: PrivateRoute,\r\n//             roles: ['Admin'],\r\n//         },\r\n//         {\r\n//             path: '/ui/icons',\r\n//             name: 'Icons',\r\n//             children: [\r\n//                 {\r\n//                     path: '/ui/icons/feather',\r\n//                     name: 'Feather Icons',\r\n//                     component: FeatherIcons,\r\n//                     route: PrivateRoute,\r\n//                     roles: ['Admin'],\r\n//                 },\r\n//                 {\r\n//                     path: '/ui/icons/unicons',\r\n//                     name: 'Unicons Icons',\r\n//                     component: UniconsIcons,\r\n//                     route: PrivateRoute,\r\n//                     roles: ['Admin'],\r\n//                 },\r\n//             ],\r\n//         },\r\n//         {\r\n//             path: '/ui/widgets',\r\n//             name: 'Widgets',\r\n//             component: Widgets,\r\n//             route: PrivateRoute,\r\n//             roles: ['Admin'],\r\n//         },\r\n//     ],\r\n// };\r\n\r\n// charts\r\n// const chartRoutes = {\r\n//     path: '/charts',\r\n//     name: 'Charts',\r\n//     component: Charts,\r\n//     icon: FeatherIcon.PieChart,\r\n//     roles: ['Admin'],\r\n//     route: PrivateRoute\r\n// }\r\n\r\n// // forms\r\n// const formsRoutes = {\r\n//     path: '/forms',\r\n//     name: 'Forms',\r\n//     icon: FeatherIcon.FileText,\r\n//     children: [\r\n//         {\r\n//             path: '/forms/basic',\r\n//             name: 'Basic Elements',\r\n//             component: BasicForms,\r\n//             route: PrivateRoute,\r\n//         },\r\n//         {\r\n//             path: '/forms/advanced',\r\n//             name: 'Advanced',\r\n//             component: FormAdvanced,\r\n//             route: PrivateRoute,\r\n//         },\r\n//         {\r\n//             path: '/forms/validation',\r\n//             name: 'Validation',\r\n//             component: FormValidation,\r\n//             route: PrivateRoute,\r\n//         },\r\n//         {\r\n//             path: '/forms/wizard',\r\n//             name: 'Wizard',\r\n//             component: FormWizard,\r\n//             route: PrivateRoute,\r\n//         },\r\n//         {\r\n//             path: '/forms/editor',\r\n//             name: 'Editor',\r\n//             component: Editor,\r\n//             route: PrivateRoute,\r\n//         },\r\n//         {\r\n//             path: '/forms/upload',\r\n//             name: 'File Upload',\r\n//             component: FileUpload,\r\n//             route: PrivateRoute,\r\n//         }\r\n//     ]\r\n// };\r\n\r\n// const tableRoutes = {\r\n//     path: '/tables',\r\n//     name: 'Tables',\r\n//     icon: FeatherIcon.Grid,\r\n//     children: [\r\n//         {\r\n//             path: '/tables/basic',\r\n//             name: 'Basic',\r\n//             component: BasicTables,\r\n//             route: PrivateRoute,\r\n//         },\r\n//         {\r\n//             path: '/tables/advanced',\r\n//             name: 'Advanced',\r\n//             component: AdvancedTables,\r\n//             route: PrivateRoute,\r\n//         }]\r\n// };\r\n\r\n// auth\r\nconst authRoutes = {\r\n    path: '/account',\r\n    name: 'Auth',\r\n    children: [\r\n        {\r\n            path: '/account/login',\r\n            name: 'Login',\r\n            component: Login,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/logout',\r\n            name: 'Logout',\r\n            component: Logout,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/register',\r\n            name: 'Register',\r\n            component: Register,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/confirm',\r\n            name: 'Confirm',\r\n            component: Confirm,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/forget-password',\r\n            name: 'Forget Password',\r\n            component: ForgetPassword,\r\n            route: Route,\r\n        },\r\n    ],\r\n};\r\n\r\n// flatten the list of all nested routes\r\nconst flattenRoutes = (routes) => {\r\n    let flatRoutes = [];\r\n\r\n    routes = routes || [];\r\n    routes.forEach((item) => {\r\n        flatRoutes.push(item);\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\r\n        }\r\n    });\r\n    return flatRoutes;\r\n};\r\n\r\n// All routes\r\nconst allRoutes = [\r\n    rootRoute,\r\n    dashboardRoutes,\r\n    ...appRoutes,\r\n    // pagesRoutes,\r\n    // componentsRoutes,\r\n    // chartRoutes,\r\n    // formsRoutes,\r\n    // tableRoutes,\r\n    authRoutes,\r\n];\r\n\r\nconst authProtectedRoutes = [\r\n    dashboardRoutes,\r\n    ...appRoutes,\r\n    // pagesRoutes,\r\n    // componentsRoutes,\r\n    // chartRoutes,\r\n    // formsRoutes,\r\n    // tableRoutes,\r\n];\r\nconst allFlattenRoutes = flattenRoutes(allRoutes);\r\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\n// layout HOC\r\nimport withLayout from '../components/Layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\n\r\nconst Routes = () => (\r\n    // rendering the router with layout\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    !route.children && (\r\n                        <route.route\r\n                            key={index}\r\n                            path={route.path}\r\n                            roles={route.roles}\r\n                            exact={route.exact}\r\n                            component={withLayout(props => {\r\n                                return <route.component {...props} />;\r\n                            })}></route.route>\r\n                    )\r\n                );\r\n            })}\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","export function configureFakeBackend() {\r\n    let users = [{ id: 1, username: 'test', password: 'test', firstName: 'Test', lastName: 'User', role: 'Admin' }];\r\n    let realFetch = window.fetch;\r\n    window.fetch = function(url, opts) {\r\n        return new Promise((resolve, reject) => {\r\n            // wrap in timeout to simulate server api call\r\n            setTimeout(() => {\r\n                // authenticate\r\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\r\n                    // get parameters from post request\r\n                    let params = JSON.parse(opts.body);\r\n\r\n                    // find if any user matches login credentials\r\n                    let filteredUsers = users.filter(user => {\r\n                        return user.username === params.username && user.password === params.password;\r\n                    });\r\n\r\n                    if (filteredUsers.length) {\r\n                        // if login details are valid return user details and fake jwt token\r\n                        let user = filteredUsers[0];\r\n                        let responseJson = {\r\n                            id: user.id,\r\n                            username: user.username,\r\n                            firstName: user.firstName,\r\n                            lastName: user.lastName,\r\n                            role: 'Admin',\r\n                            token:\r\n                                'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJDb2RlcnRoZW1lIiwiaWF0IjoxNTU1NjgyNTc1LCJleHAiOjE1ODcyMTg1NzUsImF1ZCI6ImNvZGVydGhlbWVzLmNvbSIsInN1YiI6InRlc3QiLCJmaXJzdG5hbWUiOiJIeXBlciIsImxhc3RuYW1lIjoiVGVzdCIsIkVtYWlsIjoidGVzdEBoeXBlci5jb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4ifQ.8qHJDbs5nw4FBTr3F8Xc1NJYOMSJmGnRma7pji0YwB4',\r\n                        };\r\n                        resolve({ ok: true, json: () => responseJson });\r\n                    } else {\r\n                        // else return error\r\n                        reject('Username or password is incorrect');\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                // register\r\n                if (url.endsWith('/users/register') && opts.method === 'POST') {\r\n                    // get parameters from post request\r\n                    let params = JSON.parse(opts.body);\r\n\r\n                    // add new users\r\n                    let { firstName, lastName } = params.fullname.split(' ');\r\n                    let newUser = {\r\n                        id: users.length + 1,\r\n                        username: firstName,\r\n                        password: params.password,\r\n                        firstName: firstName,\r\n                        lastName: lastName,\r\n                        role: 'Admin',\r\n                    };\r\n                    users.push({ newUser });\r\n\r\n                    let responseJson = {\r\n                        id: newUser.id,\r\n                        username: newUser.username,\r\n                        firstName: newUser.firstName,\r\n                        lastName: newUser.lastName,\r\n                        role: newUser.role,\r\n                        token:\r\n                            'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJDb2RlcnRoZW1lIiwiaWF0IjoxNTU1NjgyNTc1LCJleHAiOjE1ODcyMTg1NzUsImF1ZCI6ImNvZGVydGhlbWVzLmNvbSIsInN1YiI6InRlc3QiLCJmaXJzdG5hbWUiOiJIeXBlciIsImxhc3RuYW1lIjoiVGVzdCIsIkVtYWlsIjoidGVzdEBoeXBlci5jb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4ifQ.8qHJDbs5nw4FBTr3F8Xc1NJYOMSJmGnRma7pji0YwB4',\r\n                    };\r\n                    resolve({ ok: true, json: () => responseJson });\r\n                    return;\r\n                }\r\n\r\n                // forget password\r\n                if (url.endsWith('/users/password-reset') && opts.method === 'POST') {\r\n                    // get parameters from post request\r\n                    let params = JSON.parse(opts.body);\r\n\r\n                    // find if any user matches login credentials\r\n                    let filteredUsers = users.filter(user => {\r\n                        return user.username === params.username;\r\n                    });\r\n\r\n                    if (filteredUsers.length) {\r\n                        let responseJson = {\r\n                            message: \"We've sent you a link to reset password to your registered email.\",\r\n                        };\r\n                        resolve({ ok: true, json: () => responseJson });\r\n                    } else {\r\n                        // else return error\r\n                        reject('Sorry, we could not find any registered user with entered username');\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                // get users\r\n                if (url.endsWith('/users') && opts.method === 'GET') {\r\n                    // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\r\n                    if (\r\n                        opts.headers &&\r\n                        opts.headers.Authorization ===\r\n                            'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJDb2RlcnRoZW1lIiwiaWF0IjoxNTU1NjgyNTc1LCJleHAiOjE1ODcyMTg1NzUsImF1ZCI6ImNvZGVydGhlbWVzLmNvbSIsInN1YiI6InRlc3QiLCJmaXJzdG5hbWUiOiJIeXBlciIsImxhc3RuYW1lIjoiVGVzdCIsIkVtYWlsIjoidGVzdEBoeXBlci5jb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4ifQ.8qHJDbs5nw4FBTr3F8Xc1NJYOMSJmGnRma7pji0YwB4'\r\n                    ) {\r\n                        resolve({ ok: true, json: () => users });\r\n                    } else {\r\n                        // return 401 not authorised if token is null or invalid\r\n                        reject('Unauthorised');\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                // pass through any requests not handled above\r\n                realFetch(url, opts).then(response => resolve(response));\r\n            }, 500);\r\n        });\r\n    };\r\n}\r\n","import React, { Component } from 'react';\r\nimport Routes from './routes/Routes';\r\n\r\n// setup fake backend\r\nimport { configureFakeBackend } from './helpers';\r\n\r\n// Themes\r\n\r\n// default\r\nimport './assets/scss/theme.scss';\r\n\r\n// dark\r\n// import './assets/scss/theme-dark.scss';\r\n\r\n// rtl\r\n// import './assets/scss/theme-rtl.scss';\r\n\r\n\r\n// configure fake backend\r\nconfigureFakeBackend();\r\n\r\n/**\r\n * Main app component\r\n */\r\nclass App extends Component {\r\n  render() {\r\n    return <Routes></Routes>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\nimport * as layoutConstants from '../../constants/layout';\r\n\r\nconst INIT_STATE = {\r\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\r\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\r\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\r\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\r\n    showRightSidebar: false,\r\n};\r\n\r\n\r\nconst Layout = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layoutType: action.payload,\r\n            };\r\n        case CHANGE_LAYOUT_WIDTH:\r\n            return {\r\n                ...state,\r\n                layoutWidth: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_THEME:\r\n            return {\r\n                ...state,\r\n                leftSideBarTheme: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_TYPE:\r\n            return {\r\n                ...state,\r\n                leftSideBarType: action.payload,\r\n            };\r\n        case TOGGLE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: !state.showRightSidebar,\r\n            };\r\n        case SHOW_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: true,\r\n            };\r\n        case HIDE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default Layout;\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\nimport { getLoggedInUser } from '../../helpers/authUtils';\r\n\r\nconst INIT_STATE = {\r\n    user: getLoggedInUser(),\r\n    loading: false,\r\n};\r\n\r\n\r\nconst Auth = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loading: true };\r\n        case LOGIN_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, error: null };\r\n        case LOGIN_USER_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case REGISTER_USER:\r\n            return { ...state, loading: true };\r\n        case REGISTER_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, error: null };\r\n        case REGISTER_USER_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case LOGOUT_USER:\r\n            return { ...state, user: null };\r\n        case FORGET_PASSWORD:\r\n            return { ...state, loading: true };\r\n        case FORGET_PASSWORD_SUCCESS:\r\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\r\n        case FORGET_PASSWORD_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Auth;\r\n","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\n\r\nconst AppMenu = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case INIT_MENU:\r\n            return action.payload;\r\n        case INIT_MENU_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\r\n            return { ...state };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AppMenu;\r\n","// @flow\r\n\r\nimport { combineReducers } from 'redux';\r\nimport Layout from './layout/reducers';\r\nimport Auth from './auth/reducers';\r\nimport AppMenu from './appMenu/reducers';\r\n\r\nexport default combineReducers({\r\n    Auth,\r\n    AppMenu,\r\n    Layout,\r\n});\r\n","/**\r\n * Fetch data from given url\r\n * @param {*} url\r\n * @param {*} options\r\n */\r\nconst fetchJSON = (url, options = {}) => {\r\n    return fetch(url, options)\r\n        .then(response => {\r\n            if (!response.status === 200) {\r\n                throw response.json();\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(json => {\r\n            return json;\r\n        })\r\n        .catch(error => {\r\n            throw error;\r\n        });\r\n};\r\n\r\nexport { fetchJSON };\r\n","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { fetchJSON } from '../../helpers/api';\r\n\r\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER, FORGET_PASSWORD } from './constants';\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserFailed,\r\n    registerUserSuccess,\r\n    registerUserFailed,\r\n    forgetPasswordSuccess,\r\n    forgetPasswordFailed,\r\n} from './actions';\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n    let cookies = new Cookies();\r\n    if (user) cookies.set('user', JSON.stringify(user), { path: '/' });\r\n    else cookies.remove('user', { path: '/' });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/authenticate', options);\r\n        setSession(response);\r\n        yield put(loginUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(loginUserFailed(message));\r\n        setSession(null);\r\n    }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        setSession(null);\r\n        yield call(() => {\r\n            history.push('/account/login');\r\n        });\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ fullname, email, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/register', options);\r\n        yield put(registerUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(registerUserFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/password-reset', options);\r\n        yield put(forgetPasswordSuccess(response.message));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(forgetPasswordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword() {\r\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga() {\r\n    yield all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser), fork(watchForgetPassword)]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        if (width === layoutConstants.LAYOUT_WIDTH_BOXED) {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n            yield call(manageBodyClass, 'boxed-layout', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n            yield call(manageBodyClass, 'boxed-layout', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        if (theme === layoutConstants.LEFT_SIDEBAR_THEME_DARK) {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        switch (type) {\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n                break;\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'add');\r\n                break;\r\n            default:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'remove');\r\n                break;\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType() {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth() {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme() {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType() {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar() {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar() {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar() {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga() {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","\r\n/**\r\n * Flatten the nested list of menu items\r\n */\r\nlet uuid = 1;\r\n\r\nconst assignIdAndParent = (menuItems, parentId) => {\r\n    menuItems = menuItems || [];\r\n    menuItems.forEach(item => {\r\n        const id = item.id || uuid;\r\n        uuid += 1;\r\n        item.id = id;\r\n        item.parentId = item.parentId || parentId;\r\n        item.active = false;\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            assignIdAndParent(item.children, id);\r\n        }\r\n    });\r\n};\r\n\r\nexport default (menuItems) => {\r\n    assignIdAndParent(menuItems);\r\n    return menuItems;\r\n};\r\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        yield put(initMenuSuccess(menuItems));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit() {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange() {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga() {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","// @flow\r\nimport { all } from 'redux-saga/effects';\r\nimport authSaga from './auth/saga';\r\nimport layoutSaga from './layout/saga';\r\nimport appMenuSaga from './appMenu/saga';\r\n\r\nexport default function* rootSaga(getState: any): any {\r\n    yield all([authSaga(), layoutSaga(), appMenuSaga()]);\r\n}\r\n","// @flow\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from './reducers';\r\nimport sagas from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState: {}) {\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\r\n    sagaMiddleware.run(sagas);\r\n    return store;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n\r\n","/* LAYOUT */\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\r\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\r\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\r\n\r\n/* RIGHT SIDEBAR */\r\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\r\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\r\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\r\n"],"sourceRoot":""}